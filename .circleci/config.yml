version: 2

jobs:

  build:
    working_directory: /go/src/github.com/FactomProject/factom-cli
    docker:
      - image: circleci/golang:1.15

    steps:
      - checkout

      - run:
          name: Build and install the executable
          command: go install -v

  test:
    working_directory: /go/src/github.com/FactomProject/factom-cli
    docker:
      - image: circleci/golang:1.15

    steps:
      - checkout

      - run:
          name: Build and install the executable
          command: go install -v

      - run:
          name: Run tests!
          no_output_timeout: 2400
          command: go test -v ./...

  # Docker builds
  docker_build:
    working_directory: /go/src/github.com/FactomProject/factom-cli

    docker:
      - image: factominc/elixir_python

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.06.0-ce

      # Load the images if the cache hit
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /images/factom-cli-alpine.tar | true
            docker load -i /images/factom-cli.tar | true

      # Build the containers
      - run:
          name: Build the baseline images
          command: |
            docker build -t factom-cli-alpine -f Dockerfile.alpine .
            docker build -t factom-cli -f Dockerfile .

      # Push, depending on branch/tag
      - run:
          name: Push  master / develop to DockerHub
          command: |

           # Login to DockerHub
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

            # If there is a tag, use it
            if [ "$CIRCLE_TAG" != "" ]; then
              docker tag factom-cli factominc/factom-cli:${CIRCLE_TAG}
              docker push factominc/factom-cli:${CIRCLE_TAG}
              docker tag factom-cli-alpine factominc/factom-cli:${CIRCLE_TAG}-alpine
              docker push factominc/factom-cli:${CIRCLE_TAG}-alpine
            fi

            if [ "${CIRCLE_BRANCH}" == "master" ]; then

              # Tag master as latest
              docker tag factom-cli factominc/factom-cli:latest
              docker push factominc/factom-cli:latest
              docker tag factom-cli-alpine factominc/factom-cli:alpine
              docker push factominc/factom-cli:alpine
            fi

            if [ "${CIRCLE_BRANCH}" == "develop" ]; then

              # Tag develop as develop anyhow
              docker tag factom-cli factominc/factom-cli:develop
              docker push factominc/factom-cli:develop
              docker tag factom-cli-alpine factominc/factom-cli:alpine-develop
              docker push factominc/factom-cli:alpine-develop
            fi

            docker logout

      - run:
          name: Push images to AWS ECR
          command: |
            # Login to AWS ECR
            login="$(aws ecr get-login  --no-include-email --region $AWS_REGION)"
            ${login}

            # If there is a tag, use it
            if [ "$CIRCLE_TAG" != "" ]; then
              docker tag factom-cli ${AWS_REPO_BASE_URI}/factom-cli:${CIRCLE_TAG}
              docker push ${AWS_REPO_BASE_URI}/factom-cli:${CIRCLE_TAG}
              docker tag factom-cli-alpine ${AWS_REPO_BASE_URI}/factom-cli:${CIRCLE_TAG}-alpine
              docker push ${AWS_REPO_BASE_URI}/factom-cli:${CIRCLE_TAG}-alpine
            fi

            if [ "${CIRCLE_BRANCH}" == "master" ]; then

              # Tag master as latest
              docker tag factom-cli ${AWS_REPO_BASE_URI}/factom-cli:latest
              docker push ${AWS_REPO_BASE_URI}/factom-cli:latest
              docker tag factom-cli-alpine ${AWS_REPO_BASE_URI}/factom-cli:alpine
              docker push ${AWS_REPO_BASE_URI}/factom-cli:alpine
            fi

            if [ "${CIRCLE_BRANCH}" == "develop" ]; then

              # Tag develop as develop anyhow
              docker tag factom-cli ${AWS_REPO_BASE_URI}/factom-cli:develop
              docker push ${AWS_REPO_BASE_URI}/factom-cli:develop
              docker tag factom-cli-alpine ${AWS_REPO_BASE_URI}/factom-cli:alpine-develop
              docker push ${AWS_REPO_BASE_URI}/factom-cli:alpine-develop
            fi

            docker logout

      - run:
          name: Save the image cache
          command: |
            mkdir -p /images
            docker save -o /images/factom-cli-alpine.tar factom-cli-alpine $(docker history -q factom-cli-alpine |grep -v missing | grep -v none)
            docker save -o /images/factom-cli.tar factom-cli $(docker history -q factom-cli |grep -v missing | grep -v none)


# The flow is
#    build
#      |
#      ---------- test
#                   |
#                   ---------- docker_build
#
#

workflows:
  version: 2
  commit-workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - docker_build:
          filters:
            branches:
              only:
                - develop
                - master
          context: org-global
          requires:
            - test
